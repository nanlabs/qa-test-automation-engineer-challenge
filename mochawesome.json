{
  "stats": {
    "suites": 34,
    "tests": 137,
    "passes": 137,
    "pending": 0,
    "failures": 0,
    "testsRegistered": 137,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-06-04T00:40:11.733Z",
    "end": "2025-06-04T00:44:58.867Z",
    "duration": 287134
  },
  "results": [
    {
      "uuid": "c9ccd0eb-537d-46bc-a152-556fce49d8e7",
      "title": "",
      "fullFile": "cypress/e2e/AddProducts_spec.cy.js",
      "file": "cypress/e2e/AddProducts_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dc9ba8e5-e79c-44c3-b711-0ae477418cab",
          "title": "Test Case 12: Adding Products to Cart",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add product to the cart and verify details",
              "fullTitle": "Test Case 12: Adding Products to Cart should add product to the cart and verify details",
              "timedOut": null,
              "duration": 6558,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Launch and verify homepage\nhomePage.visit();\nhomePage.verifyHomePageVisible();\n// Navigate to Products page\nproductPage.visit();\n// Add first product (index 0)\nproductPage.addFirstProductToCart();\n// Click View Cart\ncartPage.visit();\n// Verify price, quantity, and total price\ncartPage.verifyProductPricesAndTotal();",
              "err": {},
              "uuid": "e00ae39a-b336-4c51-969f-f432cf026416",
              "parentUUID": "dc9ba8e5-e79c-44c3-b711-0ae477418cab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e00ae39a-b336-4c51-969f-f432cf026416"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6558,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d9aa10cd-30f0-4f42-9da2-13cfafc53209",
      "title": "",
      "fullFile": "cypress/e2e/AddReviewToProducts_spec.cy.js",
      "file": "cypress/e2e/AddReviewToProducts_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bff9887c-64fb-4e3d-8dcd-886a81919dde",
          "title": "Test Case 14: Add Review on a Product",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow user to add a review on a product",
              "fullTitle": "Test Case 14: Add Review on a Product should allow user to add a review on a product",
              "timedOut": null,
              "duration": 9319,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit homepage and navigate to products\nhomePage.visit();\n// Go to products page\nproductsPage.visit();\nproductsPage.verifyProductsPageVisible();\n// Click 'View Product'\nproductsPage.clickFirstViewProduct();\n// Verify 'Write Your Review'\nproductDetails.verifyReviewSectionVisible();\n// Submit review\nproductDetails.submitReview(this.review.name, this.review.email, this.review.review);\n// Verify success message\nproductDetails.verifyReviewSuccessMessage();",
              "err": {},
              "uuid": "6f2be283-16d3-4fe5-b468-bdd5197853ae",
              "parentUUID": "bff9887c-64fb-4e3d-8dcd-886a81919dde",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f2be283-16d3-4fe5-b468-bdd5197853ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9319,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1eac712c-89b3-48de-ac8f-1ef9fc3fdfa7",
      "title": "",
      "fullFile": "cypress/e2e/CartSubscription_spec.cy.js",
      "file": "cypress/e2e/CartSubscription_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6b770368-7129-4f00-940d-192dee17ab36",
          "title": "Test Case 11: Subscription from Cart Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow user to subscribe from footer on cart page",
              "fullTitle": "Test Case 11: Subscription from Cart Page should allow user to subscribe from footer on cart page",
              "timedOut": null,
              "duration": 6826,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit and verify home page\nhomePage.visit();\nhomePage.verifyHomePageVisible();\n//since i found cart page won't work without an item we need to add one first to view page\n// add product\ncy.log('Cart is empty, adding a product first');\nproductPage.visit();\nproductPage.addFirstProductToCart();\ncartPage.visit();\n// Scroll down to footer\ncartPage.scrollToFooter();\n// Verify 'SUBSCRIPTION' text\ncartPage.verifySubscriptionTextVisible();\n// Enter email and click arrow\nconst email = `test${Date.now()}@example.com`;\ncartPage.enterEmailInSubscription(email);\ncartPage.clickSubscribeArrow();\n// Verify success message\ncartPage.verifySubscriptionSuccessMessage();",
              "err": {},
              "uuid": "c0b4d693-d22e-4be9-8df0-1111c8c74760",
              "parentUUID": "6b770368-7129-4f00-940d-192dee17ab36",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0b4d693-d22e-4be9-8df0-1111c8c74760"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6826,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e95f2146-ee29-423f-a7d3-21a651b56804",
      "title": "",
      "fullFile": "cypress/e2e/ContactUsForm_spec.cy.js",
      "file": "cypress/e2e/ContactUsForm_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fc854061-b855-4b31-8fb1-2411011130af",
          "title": "Test Case 6: Contact Us Form",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should successfully submit the contact form",
              "fullTitle": "Test Case 6: Contact Us Form should successfully submit the contact form",
              "timedOut": null,
              "duration": 7630,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit and verify homepage\nhomePage.visit();\nhomePage.verifyHomePageVisible();\n// Click on 'Contact Us'\ncy.contains('Contact us').click();\n// Verify 'GET IN TOUCH'\ncontactPage.verifyGetInTouchVisible();\n// Fill in form\ncontactPage.getNameField().type(this.form.name);\ncontactPage.getEmailField().type(this.form.email);\ncontactPage.getSubjectField().type(this.form.subject);\ncontactPage.getMessageField().type(this.form.message);\n// Click 'Submit'\ncontactPage.clickSubmit();\n// Confirm alert\ncy.on('window:alert', text => {\n  expect(text).to.contains('Press OK');\n});\n// Verify success message\ncontactPage.verifySuccessMessage();\n// Click 'Home' and verify navigation\ncontactPage.clickHomeButton();\nhomePage.verifyHomePageVisible();",
              "err": {},
              "uuid": "fd182ae6-2c25-4a31-96dd-431cdb5f389f",
              "parentUUID": "fc854061-b855-4b31-8fb1-2411011130af",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd182ae6-2c25-4a31-96dd-431cdb5f389f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7630,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "805c4e83-2176-4f49-84a5-eccdad570b17",
      "title": "",
      "fullFile": "cypress/e2e/ExistingUserValidation_spec.cy.js",
      "file": "cypress/e2e/ExistingUserValidation_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e98d5f63-2eaf-4f05-85ec-355ff3195115",
          "title": "Test Case 5: Register User with existing email",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show error when registering with existing email",
              "fullTitle": "Test Case 5: Register User with existing email should show error when registering with existing email",
              "timedOut": null,
              "duration": 5116,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// visiting home page\nhomePage.visit();\nhomePage.verifyHomePageVisible();\n// Click on Signup/Login\nhomePage.getSignupLoginButton().click();\n// Verify New User Signup is visible\nsignupPage.verifyNewUserSignupVisible();\n// Enter name and existing email\nsignupPage.enterNameEmail(this.inf.name, this.inf.email);\nloginPage.enterLoginPassword(this.inf.password);\n// Click Signup\nsignupPage.clickSignupButton();\n// Verify error message\nsignupPage.verifyEmailAlreadyExistsError();",
              "err": {},
              "uuid": "9d61076f-a533-4e8e-9958-87a7ae4a3f6a",
              "parentUUID": "e98d5f63-2eaf-4f05-85ec-355ff3195115",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d61076f-a533-4e8e-9958-87a7ae4a3f6a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5116,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8796b719-8aaf-4b45-9a17-d801f99e051e",
      "title": "",
      "fullFile": "cypress/e2e/HomeSuscription_spec.cy.js",
      "file": "cypress/e2e/HomeSuscription_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0db1dcdd-06b6-49ca-9094-42fb95b1e0b2",
          "title": "Test Case 10: Verify Subscription in Home Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should allow user to subscribe from the footer",
              "fullTitle": "Test Case 10: Verify Subscription in Home Page should allow user to subscribe from the footer",
              "timedOut": null,
              "duration": 4681,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit and verify homepage\nhomePage.visit();\nhomePage.verifyHomePageVisible();\n// Scroll to footer\nhomePage.scrollToFooter();\n// Verify 'SUBSCRIPTION' text\nhomePage.verifySubscriptionTextVisible();\n// Enter email and click arrow\nconst email = `test${Date.now()}@example.com`;\nhomePage.enterEmailInSubscription(email);\nhomePage.clickSubscribeArrow();\n// Verify success message\nhomePage.verifySubscriptionSuccessMessage();",
              "err": {},
              "uuid": "5d663a98-b457-4ae0-81af-114438ed2791",
              "parentUUID": "0db1dcdd-06b6-49ca-9094-42fb95b1e0b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d663a98-b457-4ae0-81af-114438ed2791"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4681,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e5df24f7-6e51-40cd-9035-6b2e54139e7b",
      "title": "",
      "fullFile": "cypress/e2e/InvalidLogin_spec.cy.js",
      "file": "cypress/e2e/InvalidLogin_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "df71f73c-66f9-4943-875c-c95851a2ae7e",
          "title": "Test Case 3: Login User with incorrect email and password",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display error for invalid login",
              "fullTitle": "Test Case 3: Login User with incorrect email and password should display error for invalid login",
              "timedOut": null,
              "duration": 5258,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Launch and verify\nhomePage.visit();\nhomePage.verifyHomePageVisible();\n// Click login\nhomePage.getSignupLoginButton().click();\n// Verify login form visible\ncy.contains('Login to your account').should('be.visible');\n// Enter incorrect creds and submit\nloginPage.enterLoginEmail(this.invalid.invalidEmail);\nloginPage.enterLoginPassword(this.invalid.invalidPassword);\nloginPage.clickLoginButton();\n// Verify error message\nloginPage.verifyLoginErrorVisible();",
              "err": {},
              "uuid": "34926ae0-582a-4b0a-a43c-ceeaa8bff182",
              "parentUUID": "df71f73c-66f9-4943-875c-c95851a2ae7e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "34926ae0-582a-4b0a-a43c-ceeaa8bff182"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5258,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1ef46899-bb5c-42bf-ad74-5e5895e194b7",
      "title": "",
      "fullFile": "cypress/e2e/LogOutUser_spec.cy.js",
      "file": "cypress/e2e/LogOutUser_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f9b758d7-dd93-4d86-a463-fc2cb3d33043",
          "title": "Test Case 4: Log out user",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should log in and log out the user successfully",
              "fullTitle": "Test Case 4: Log out user should log in and log out the user successfully",
              "timedOut": null,
              "duration": 6952,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// visiting home page\nhomePage.visit();\nhomePage.verifyHomePageVisible();\n// Go to Login\nhomePage.getSignupLoginButton().click();\n// Enter correct email and password\nloginPage.enterLoginEmail(this.inf.email);\nloginPage.enterLoginPassword(this.inf.password);\nloginPage.clickLoginButton();\n// Click logout\nloginPage.clickLogout();\n// Verify redirected to login\nloginPage.verifyRedirectedToLogin();",
              "err": {},
              "uuid": "013858b4-7a87-4a6f-b709-a4c26623b2fd",
              "parentUUID": "f9b758d7-dd93-4d86-a463-fc2cb3d33043",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "013858b4-7a87-4a6f-b709-a4c26623b2fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6952,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "29fd5384-213b-4e20-af29-452b70c6edef",
      "title": "",
      "fullFile": "cypress/e2e/Login_spec.cy.js",
      "file": "cypress/e2e/Login_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cbdfefe2-e326-4ef9-af59-e454a22325a6",
          "title": "Test Case 2: Login User with correct email and password",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should login if user exists, or register first if not",
              "fullTitle": "Test Case 2: Login User with correct email and password should login if user exists, or register first if not",
              "timedOut": null,
              "duration": 13009,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "homePage.visit();\nhomePage.verifyHomePageVisible();\nhomePage.getSignupLoginButton().click();\ncy.contains('New User Signup!').should('be.visible');\n// Try to create user to check existence\ncy.get('[data-qa=\"signup-name\"]').type(this.userInf.name);\ncy.get('[data-qa=\"signup-email\"]').type(this.userInf.email);\ncy.get('[data-qa=\"signup-button\"]').click();\ncy.get('body').then($body => {\n  if ($body.text().includes('Email Address already exist!')) {\n    cy.log('Email exists. Proceeding with login...');\n    // Go back to Login section\n    loginPage.enterLoginEmail(this.userInf.email);\n    loginPage.enterLoginPassword(this.userInf.password);\n    loginPage.clickLoginButton();\n    //accountPage.verifyLoggedIn(this.userInf.username);\n    accountPage.clickDeleteAccount();\n    accountPage.verifyAccountDeleted();\n  } else {\n    // Email did not exist, so registration happened\n    signupPage.verifyAccountInfoVisible();\n    signupPage.fillAccountInfo(this.userInf); // Your reusable fill form function\n    signupPage.clickCreateAccount();\n    accountPage.verifyAccountCreated();\n    accountPage.clickContinue();\n    // accountPage.verifyLoggedIn(this.userInf.username);\n    accountPage.clickDeleteAccount();\n    accountPage.verifyAccountDeleted();\n  }\n});",
              "err": {},
              "uuid": "85821c84-4532-4567-90f5-9be6fba2cee8",
              "parentUUID": "cbdfefe2-e326-4ef9-af59-e454a22325a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "85821c84-4532-4567-90f5-9be6fba2cee8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13009,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9cde5c65-9ba4-476a-9adf-241ce095cd63",
      "title": "",
      "fullFile": "cypress/e2e/RemoveProducts_spec.cy.js",
      "file": "cypress/e2e/RemoveProducts_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "45e9737b-6a6a-4aff-9881-dd7e0ac22e76",
          "title": "Test Case 13: Remove Products from Cart",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add and then remove a product from the cart",
              "fullTitle": "Test Case 13: Remove Products from Cart should add and then remove a product from the cart",
              "timedOut": null,
              "duration": 7488,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit and verify home page\nhomePage.visit();\nhomePage.verifyHomePageVisible();\n// Add a product to cart\nproductsPage.visit();\nproductsPage.addFirstProductToCart();\ncartPage.visit();\n// Verify cart page is displayed\ncartPage.verifyCartPageVisible();\n// Click 'X' to remove product\ncartPage.removeFirstProduct();\n// Verify product is removed\ncartPage.verifyProductRemoved();",
              "err": {},
              "uuid": "b925fb11-b4da-4da4-bf9f-5ff5b46f4756",
              "parentUUID": "45e9737b-6a6a-4aff-9881-dd7e0ac22e76",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b925fb11-b4da-4da4-bf9f-5ff5b46f4756"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7488,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e92839d8-050e-46b9-ac84-bd88ba8110d2",
      "title": "",
      "fullFile": "cypress/e2e/SearchProduct_spec.cy.js",
      "file": "cypress/e2e/SearchProduct_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "980da740-cf97-40e2-98df-650d1d9be46e",
          "title": "Test Case 9: Search Product",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should search for a product and display matching results",
              "fullTitle": "Test Case 9: Search Product should search for a product and display matching results",
              "timedOut": null,
              "duration": 6128,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//  Launch & verify homepage\nhomePage.visit();\nhomePage.verifyHomePageVisible();\n// Click on 'Products' button\nhomePage.clickProducts();\n// Verify navigated to All Products page\nproductsPage.verifyProductsPageVisible();\n// Search for a product\nconst productName = 'Dress'; // any word is ok for this basic search related to products\nproductsPage.enterSearchTerm(productName);\nproductsPage.clickSearchButton();\n// Verify 'SEARCHED PRODUCTS' is visible\nproductsPage.verifySearchedProductsTitleVisible();\n// Verify product list is shown\nproductsPage.verifySearchedProductsVisible();",
              "err": {},
              "uuid": "3360500a-65a6-4789-b891-4c968252ac08",
              "parentUUID": "980da740-cf97-40e2-98df-650d1d9be46e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3360500a-65a6-4789-b891-4c968252ac08"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6128,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a24dcb6c-b2ee-442e-a9a4-2b34f40e0a28",
      "title": "",
      "fullFile": "cypress/e2e/VerifyProducts_spec.cy.js",
      "file": "cypress/e2e/VerifyProducts_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "18a2dc1e-b6fc-4969-b774-1fce19914e85",
          "title": "Test Case 8: Verify All Products and Product Detail Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should navigate to All Products and verify product details",
              "fullTitle": "Test Case 8: Verify All Products and Product Detail Page should navigate to All Products and verify product details",
              "timedOut": null,
              "duration": 5731,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Launch & verify homepage\nhomePage.visit();\nhomePage.verifyHomePageVisible();\n// Click 'Products'\nhomePage.clickProducts();\n// Verify product list\nproductsPage.verifyProductsPageVisible();\nproductsPage.verifyProductsListVisible();\n// Click 'View Product' of first product\nproductsPage.clickFirstViewProduct();\n// Verify product detail page\ncy.url().should('include', '/product_details/');\nproductDetails.verifyProductDetails();",
              "err": {},
              "uuid": "c07a9cce-86f3-4594-bc1c-147585649a8f",
              "parentUUID": "18a2dc1e-b6fc-4969-b774-1fce19914e85",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c07a9cce-86f3-4594-bc1c-147585649a8f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5731,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "82d650ba-3f61-4983-bc59-ece06ed084aa",
      "title": "",
      "fullFile": "cypress/e2e/VerifyTestPage_spec.cy.js",
      "file": "cypress/e2e/VerifyTestPage_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a2b0568f-fa0e-4a36-a6be-5ae1adc06868",
          "title": "Test Case 7: Verify Test Cases Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should navigate to the test cases page successfully",
              "fullTitle": "Test Case 7: Verify Test Cases Page should navigate to the test cases page successfully",
              "timedOut": null,
              "duration": 4078,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Visit home page and verify it's visible\nhomePage.visit();\nhomePage.verifyHomePageVisible();\n// Click on 'Test Cases'\nhomePage.clickTestCases();\n// Verify navigation to test cases page\ncy.url().should('include', '/test_cases');\ncy.contains('Test Cases').should('be.visible');",
              "err": {},
              "uuid": "31da0939-7df7-4bad-8782-e222f92cd2ea",
              "parentUUID": "a2b0568f-fa0e-4a36-a6be-5ae1adc06868",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31da0939-7df7-4bad-8782-e222f92cd2ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4078,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6f4cacd8-f0cb-4dba-bb0e-571dc97dd675",
      "title": "",
      "fullFile": "cypress/e2e/signUp_delete_spec.cy.js",
      "file": "cypress/e2e/signUp_delete_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0f2e6dab-cd14-40a0-a3cb-f6218720d9ba",
          "title": "Test case 1: Signup and Delete Account Flow",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should sign up a new user and delete the account",
              "fullTitle": "Test case 1: Signup and Delete Account Flow Should sign up a new user and delete the account",
              "timedOut": null,
              "duration": 12154,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "homePage.verifyHomePageVisible();\nhomePage.clickSignupLogin();\nsignupPage.verifyNewUserSignupVisible();\nsignupPage.enterNameEmail(this.userInf.name, this.userInf.email);\nsignupPage.clickSignupButton();\ncy.get('body').then($body => {\n  if ($body.text().includes('Email Address already exist!')) {\n    cy.log('Email exists. Proceeding to login and then delete...');\n    loginPage.enterLoginEmail(this.userInf.email);\n    loginPage.enterLoginPassword(this.userInf.password);\n    loginPage.clickLoginButton();\n    accountPage.clickDeleteAccount();\n    accountPage.verifyAccountDeleted();\n  } else {\n    // Email did not exist, so registration happened\n    signupPage.verifyEnterAccountInfoVisible();\n    signupPage.fillAccountInfo(this.userInf);\n    signupPage.submitAccountCreation();\n    accountPage.verifyAccountCreated();\n    accountPage.clickContinueButton();\n  }\n  //  resusable code\n  /*\n    signupPage.verifyEnterAccountInfoVisible()\n    signupPage.fillAccountInfo(this.userInf)\n    signupPage.submitAccountCreation()\n     accountPage.verifyAccountCreated()\n    accountPage.clickContinueButton()\n    accountPage.verifyLoggedIn(this.userInf.name)\n    accountPage.deleteAccount()\n    accountPage.verifyAccountDeleted()\n    */\n});",
              "err": {},
              "uuid": "41a5299b-ee71-4af7-ac34-33c1dc786081",
              "parentUUID": "0f2e6dab-cd14-40a0-a3cb-f6218720d9ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "41a5299b-ee71-4af7-ac34-33c1dc786081"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12154,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9a23e909-09c0-49c3-bf64-61129aeb79d0",
      "title": "",
      "fullFile": "cypress/e2e/1-getting-started/todo.cy.js",
      "file": "cypress/e2e/1-getting-started/todo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "884c536a-cfbb-414a-99e5-b2a4a0838ed3",
          "title": "example to-do app",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays two todo items by default",
              "fullTitle": "example to-do app displays two todo items by default",
              "timedOut": null,
              "duration": 979,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We use the `cy.get()` command to get all elements that match the selector.\n// Then, we use `should` to assert that there are two matched items,\n// which are the two default items.\ncy.get('.todo-list li').should('have.length', 2);\n// We can go even further and check that the default todos each contain\n// the correct text. We use the `first` and `last` functions\n// to get just the first and last matched elements individually,\n// and then perform an assertion with `should`.\ncy.get('.todo-list li').first().should('have.text', 'Pay electric bill');\ncy.get('.todo-list li').last().should('have.text', 'Walk the dog');",
              "err": {},
              "uuid": "7ffcfd0d-0bd0-4092-ab59-f7fe3707db3b",
              "parentUUID": "884c536a-cfbb-414a-99e5-b2a4a0838ed3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can add new todo items",
              "fullTitle": "example to-do app can add new todo items",
              "timedOut": null,
              "duration": 465,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We'll store our item text in a variable so we can reuse it\nconst newItem = 'Feed the cat';\n// Let's get the input element and use the `type` command to\n// input our new list item. After typing the content of our item,\n// we need to type the enter key as well in order to submit the input.\n// This input has a data-test attribute so we'll use that to select the\n// element in accordance with best practices:\n// https://on.cypress.io/selecting-elements\ncy.get('[data-test=new-todo]').type(`${newItem}{enter}`);\n// Now that we've typed our new item, let's check that it actually was added to the list.\n// Since it's the newest item, it should exist as the last element in the list.\n// In addition, with the two default items, we should have a total of 3 elements in the list.\n// Since assertions yield the element that was asserted on,\n// we can chain both of these assertions together into a single statement.\ncy.get('.todo-list li').should('have.length', 3).last().should('have.text', newItem);",
              "err": {},
              "uuid": "2b199d4e-b82f-405f-b75a-9f6e07592bf1",
              "parentUUID": "884c536a-cfbb-414a-99e5-b2a4a0838ed3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "can check off an item as completed",
              "fullTitle": "example to-do app can check off an item as completed",
              "timedOut": null,
              "duration": 249,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// In addition to using the `get` command to get an element by selector,\n// we can also use the `contains` command to get an element by its contents.\n// However, this will yield the <label>, which is lowest-level element that contains the text.\n// In order to check the item, we'll find the <input> element for this <label>\n// by traversing up the dom to the parent element. From there, we can `find`\n// the child checkbox <input> element and use the `check` command to check it.\ncy.contains('Pay electric bill').parent().find('input[type=checkbox]').check();\n// Now that we've checked the button, we can go ahead and make sure\n// that the list element is now marked as completed.\n// Again we'll use `contains` to find the <label> element and then use the `parents` command\n// to traverse multiple levels up the dom until we find the corresponding <li> element.\n// Once we get that element, we can assert that it has the completed class.\ncy.contains('Pay electric bill').parents('li').should('have.class', 'completed');",
              "err": {},
              "uuid": "ec0c3638-8e68-4f99-9649-d378a95db0bf",
              "parentUUID": "884c536a-cfbb-414a-99e5-b2a4a0838ed3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "2900be96-5018-4043-8469-d06a1a915085",
              "title": "with a checked task",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can filter for uncompleted tasks",
                  "fullTitle": "example to-do app with a checked task can filter for uncompleted tasks",
                  "timedOut": null,
                  "duration": 422,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We'll click on the \"active\" button in order to\n// display only incomplete items\ncy.contains('Active').click();\n// After filtering, we can assert that there is only the one\n// incomplete item in the list.\ncy.get('.todo-list li').should('have.length', 1).first().should('have.text', 'Walk the dog');\n// For good measure, let's also assert that the task we checked off\n// does not exist on the page.\ncy.contains('Pay electric bill').should('not.exist');",
                  "err": {},
                  "uuid": "7dea7b77-99ca-4a2c-bf0f-9dadf2df4951",
                  "parentUUID": "2900be96-5018-4043-8469-d06a1a915085",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can filter for completed tasks",
                  "fullTitle": "example to-do app with a checked task can filter for completed tasks",
                  "timedOut": null,
                  "duration": 321,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can perform similar steps as the test above to ensure\n// that only completed tasks are shown\ncy.contains('Completed').click();\ncy.get('.todo-list li').should('have.length', 1).first().should('have.text', 'Pay electric bill');\ncy.contains('Walk the dog').should('not.exist');",
                  "err": {},
                  "uuid": "0d807736-2536-40fb-9ffe-64f9737a2b1a",
                  "parentUUID": "2900be96-5018-4043-8469-d06a1a915085",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can delete all completed tasks",
                  "fullTitle": "example to-do app with a checked task can delete all completed tasks",
                  "timedOut": null,
                  "duration": 325,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// First, let's click the \"Clear completed\" button\n// `contains` is actually serving two purposes here.\n// First, it's ensuring that the button exists within the dom.\n// This button only appears when at least one task is checked\n// so this command is implicitly verifying that it does exist.\n// Second, it selects the button so we can click it.\ncy.contains('Clear completed').click();\n// Then we can make sure that there is only one element\n// in the list and our element does not exist\ncy.get('.todo-list li').should('have.length', 1).should('not.have.text', 'Pay electric bill');\n// Finally, make sure that the clear button no longer exists.\ncy.contains('Clear completed').should('not.exist');",
                  "err": {},
                  "uuid": "d182f402-33cd-40e2-80e8-7c6a8530e082",
                  "parentUUID": "2900be96-5018-4043-8469-d06a1a915085",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7dea7b77-99ca-4a2c-bf0f-9dadf2df4951",
                "0d807736-2536-40fb-9ffe-64f9737a2b1a",
                "d182f402-33cd-40e2-80e8-7c6a8530e082"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1068,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "7ffcfd0d-0bd0-4092-ab59-f7fe3707db3b",
            "2b199d4e-b82f-405f-b75a-9f6e07592bf1",
            "ec0c3638-8e68-4f99-9649-d378a95db0bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1693,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "39705015-d1df-4258-88c5-514bfef05e80",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/actions.cy.js",
      "file": "cypress/e2e/2-advanced-examples/actions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "50c5b248-6e67-44ad-94e0-666940ac5df6",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 4091,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com');\ncy.get('.action-email').should('have.value', 'fake@email.com');\n// .type() with special character sequences\ncy.get('.action-email').type('{leftarrow}{rightarrow}{uparrow}{downarrow}');\ncy.get('.action-email').type('{del}{selectall}{backspace}');\n// .type() with key modifiers\ncy.get('.action-email').type('{alt}{option}'); //these are equivalent\ncy.get('.action-email').type('{ctrl}{control}'); //these are equivalent\ncy.get('.action-email').type('{meta}{command}{cmd}'); //these are equivalent\ncy.get('.action-email').type('{shift}');\n// Delay each keypress by 0.1 sec\ncy.get('.action-email').type('slow.typing@email.com', {\n  delay: 100\n});\ncy.get('.action-email').should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled')\n// Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n});\ncy.get('.action-disabled').should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "9f6f53ad-4a34-4fac-b6d6-724823a3bf2b",
              "parentUUID": "50c5b248-6e67-44ad-94e0-666940ac5df6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 244,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus();\ncy.get('.action-focus').should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "190f5cdd-4ebc-43b5-a967-2e29a1fb455b",
              "parentUUID": "50c5b248-6e67-44ad-94e0-666940ac5df6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 489,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur');\ncy.get('.action-blur').blur();\ncy.get('.action-blur').should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "ff320784-7225-43a2-bcac-4c9bf6ed0315",
              "parentUUID": "50c5b248-6e67-44ad-94e0-666940ac5df6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 656,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text');\ncy.get('.action-clear').should('have.value', 'Clear this text');\ncy.get('.action-clear').clear();\ncy.get('.action-clear').should('have.value', '');",
              "err": {},
              "uuid": "be50e1ac-972f-4841-8587-0b04e0f61630",
              "parentUUID": "50c5b248-6e67-44ad-94e0-666940ac5df6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 503,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit();\ncy.get('.action-form').next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "5073c01c-1eea-4195-a414-cb718e060ddf",
              "parentUUID": "50c5b248-6e67-44ad-94e0-666940ac5df6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 2122,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click();\n// You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight');\n// .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas');\ncy.get('#action-canvas').click(80, 75); // click 80px on x coord and 75px on y coord\ncy.get('#action-canvas').click(170, 75);\ncy.get('#action-canvas').click(80, 165);\ncy.get('#action-canvas').click(100, 185);\ncy.get('#action-canvas').click(125, 190);\ncy.get('#action-canvas').click(150, 185);\ncy.get('#action-canvas').click(170, 165);\n// click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n});\n// Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "03a8743c-2355-4126-8aa0-fc0a6608ee04",
              "parentUUID": "50c5b248-6e67-44ad-94e0-666940ac5df6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 319,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick();\ncy.get('.action-div').should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "c2b13e49-792d-47dc-9d16-3ee58b590c98",
              "parentUUID": "50c5b248-6e67-44ad-94e0-666940ac5df6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 271,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick();\ncy.get('.rightclick-action-div').should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "00803cc6-7848-4139-b9d0-b64e4864e337",
              "parentUUID": "50c5b248-6e67-44ad-94e0-666940ac5df6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 902,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check();\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check();\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').should('be.checked');\n// .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1');\ncy.get('.action-radios [type=\"radio\"]').should('be.checked');\n// .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']);\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').should('be.checked');\n// Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n});\ncy.get('.action-checkboxes [disabled]').should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n});\ncy.get('.action-radios [type=\"radio\"]').should('be.checked');",
              "err": {},
              "uuid": "b766f174-2f04-4d1f-a3e0-f3b888bde667",
              "parentUUID": "50c5b248-6e67-44ad-94e0-666940ac5df6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 942,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck();\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').should('not.be.checked');\n// .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1');\ncy.get('.action-check [type=\"checkbox\"]').uncheck('checkbox1');\ncy.get('.action-check [type=\"checkbox\"][value=\"checkbox1\"]').should('not.be.checked');\n// .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']);\ncy.get('.action-check [type=\"checkbox\"]').uncheck(['checkbox1', 'checkbox3']);\ncy.get('.action-check [type=\"checkbox\"][value=\"checkbox1\"]').should('not.be.checked');\ncy.get('.action-check [type=\"checkbox\"][value=\"checkbox3\"]').should('not.be.checked');\n// Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n});\ncy.get('.action-check [disabled]').should('not.be.checked');",
              "err": {},
              "uuid": "cfbd3a9b-0424-4393-a625-12da5257f64a",
              "parentUUID": "50c5b248-6e67-44ad-94e0-666940ac5df6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 934,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--');\n// Select option(s) with matching text content\ncy.get('.action-select').select('apples');\n// confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']);\ncy.get('.action-select-multiple')\n// when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas');\ncy.get('.action-select')\n// can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']);\ncy.get('.action-select-multiple').invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']);\n// assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "a04aa138-f11d-4501-abb8-498cedde3ba6",
              "parentUUID": "50c5b248-6e67-44ad-94e0-666940ac5df6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 190,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible');\n// scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView();\ncy.get('#scroll-horizontal button').should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible');\n// Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView();\ncy.get('#scroll-vertical button').should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible');\n// Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView();\ncy.get('#scroll-both button').should('be.visible');",
              "err": {},
              "uuid": "20d54937-f470-4e4a-a9fd-68738cd57710",
              "parentUUID": "50c5b248-6e67-44ad-94e0-666940ac5df6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25);\ncy.get('.trigger-input-range').trigger('change');\ncy.get('.trigger-input-range').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "4f07b7e2-5eed-435c-bea1-779541cc9435",
              "parentUUID": "50c5b248-6e67-44ad-94e0-666940ac5df6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2187,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right');\n// or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250);\n// or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%');\n// control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n});\n// control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "ca84f18a-e6e4-4c78-8670-99dc62e1f73d",
              "parentUUID": "50c5b248-6e67-44ad-94e0-666940ac5df6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9f6f53ad-4a34-4fac-b6d6-724823a3bf2b",
            "190f5cdd-4ebc-43b5-a967-2e29a1fb455b",
            "ff320784-7225-43a2-bcac-4c9bf6ed0315",
            "be50e1ac-972f-4841-8587-0b04e0f61630",
            "5073c01c-1eea-4195-a414-cb718e060ddf",
            "03a8743c-2355-4126-8aa0-fc0a6608ee04",
            "c2b13e49-792d-47dc-9d16-3ee58b590c98",
            "00803cc6-7848-4139-b9d0-b64e4864e337",
            "b766f174-2f04-4d1f-a3e0-f3b888bde667",
            "cfbd3a9b-0424-4393-a625-12da5257f64a",
            "a04aa138-f11d-4501-abb8-498cedde3ba6",
            "20d54937-f470-4e4a-a9fd-68738cd57710",
            "4f07b7e2-5eed-435c-bea1-779541cc9435",
            "ca84f18a-e6e4-4c78-8670-99dc62e1f73d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14095,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9289da3b-1d12-404f-8356-5bc8f01c8368",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/aliasing.cy.js",
      "file": "cypress/e2e/2-advanced-examples/aliasing.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a1488d65-c2b9-4f08-af42-5b0dbda5d63c",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 635,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn');\n// when we reference the alias, we place an\n// @ in front of its name\ncy.get('@firstBtn').click();\ncy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');",
              "err": {},
              "uuid": "c4ed6be3-1fd5-4427-9ccf-2bc2fadea757",
              "parentUUID": "a1488d65-c2b9-4f08-af42-5b0dbda5d63c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 1347,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.intercept('GET', '**/comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);",
              "err": {},
              "uuid": "454e7fb8-11c3-4be5-9cd3-b74f88e5fc5e",
              "parentUUID": "a1488d65-c2b9-4f08-af42-5b0dbda5d63c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c4ed6be3-1fd5-4427-9ccf-2bc2fadea757",
            "454e7fb8-11c3-4be5-9cd3-b74f88e5fc5e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1982,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "688a69c8-840c-45a0-be25-41cac5f4d2bd",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/assertions.cy.js",
      "file": "cypress/e2e/2-advanced-examples/assertions.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2f0cd3b0-2677-4430-bac2-655925d50777",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "021951b1-2c2f-42ec-b1a2-afc0c83a00d6",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 606,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first()\n// checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content')\n// chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td')\n// to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i);\n// a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table').find('tbody tr:last')\n// finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible');\n// for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-element’s-text-contents",
                  "err": {},
                  "uuid": "4683131a-cd2e-436e-951b-abc46f5a349c",
                  "parentUUID": "021951b1-2c2f-42ec-b1a2-afc0c83a00d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 155,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "66300d96-c4e9-4f12-9dc3-6a376695b80c",
                  "parentUUID": "021951b1-2c2f-42ec-b1a2-afc0c83a00d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4683131a-cd2e-436e-951b-abc46f5a349c",
                "66300d96-c4e9-4f12-9dc3-6a376695b80c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 761,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7c5f13cf-634d-4cd2-9935-2a86e94e8bb1",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 145,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be.true;\nconst o = {\n  foo: 'bar'\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: 'bar'\n});\n// matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "cd7e8b33-a73c-4e29-843c-7d2e7ddcb3fd",
                  "parentUUID": "7c5f13cf-634d-4cd2-9935-2a86e94e8bb1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 158,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should($p => {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  const texts = $p.map((i, el) => Cypress.$(el).text());\n  // jquery map returns jquery object\n  // and .get() convert this to simple array\n  const paragraphs = texts.get();\n  // array should have length of 3\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3);\n  // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "eb2f925b-b04c-409c-8bff-c49404eec3ad",
                  "parentUUID": "7c5f13cf-634d-4cd2-9935-2a86e94e8bb1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 281,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div')\n// .should(cb) callback function will be retried\n.should($div => {\n  expect($div).to.have.length(1);\n  const className = $div[0].className;\n  expect(className).to.match(/heading-/);\n})\n// .then(cb) callback is not retried,\n// it either passes or fails\n.then($div => {\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "3a559720-f6e5-40ba-b166-567125e71002",
                  "parentUUID": "7c5f13cf-634d-4cd2-9935-2a86e94e8bb1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 151,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div').should($div => {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  }\n  const className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(`Could not find class \"heading-\" in ${className}`);\n  }\n});",
                  "err": {},
                  "uuid": "e5eaf90b-c1e0-4805-ab6c-6f48f6b2087b",
                  "parentUUID": "7c5f13cf-634d-4cd2-9935-2a86e94e8bb1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 163,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nlet text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nconst normalizeText = s => s.replace(/\\s/g, '').toLowerCase();\ncy.get('.two-elements').find('.first').then($first => {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get('.two-elements').find('.second').should($div => {\n  // we can massage text before comparing\n  const secondText = normalizeText($div.text());\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "8ca3db68-1120-4237-8fd3-68af65afe71e",
                  "parentUUID": "7c5f13cf-634d-4cd2-9935-2a86e94e8bb1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 201,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const person = {\n  name: 'Joe',\n  age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "251d665b-3758-4260-976d-7bac521aa1f9",
                  "parentUUID": "7c5f13cf-634d-4cd2-9935-2a86e94e8bb1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1637,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#random-number').should($div => {\n  const n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "7aa02fa8-3be3-4b9c-b0ff-ec556648afd8",
                  "parentUUID": "7c5f13cf-634d-4cd2-9935-2a86e94e8bb1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd7e8b33-a73c-4e29-843c-7d2e7ddcb3fd",
                "eb2f925b-b04c-409c-8bff-c49404eec3ad",
                "3a559720-f6e5-40ba-b166-567125e71002",
                "e5eaf90b-c1e0-4805-ab6c-6f48f6b2087b",
                "8ca3db68-1120-4237-8fd3-68af65afe71e",
                "251d665b-3758-4260-976d-7bac521aa1f9",
                "7aa02fa8-3be3-4b9c-b0ff-ec556648afd8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2736,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "df683aa3-a290-44c8-b9cf-8139c05ecd75",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/connectors.cy.js",
      "file": "cypress/e2e/2-advanced-examples/connectors.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "701d8ada-1a4f-44a8-8662-fdcb403dc5cf",
          "title": "Connectors",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 599,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/each\ncy.get('.connectors-each-ul>li').each(($el, index, $list) => {\n  console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "55ef3829-7f27-43bd-ae30-8458e20775ef",
              "parentUUID": "701d8ada-1a4f-44a8-8662-fdcb403dc5cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 221,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/its\ncy.get('.connectors-its-ul>li')\n// calls the 'length' property yielding that value\n.its('length').should('be.gt', 2);",
              "err": {},
              "uuid": "9f6d1c85-9b60-4b02-94fb-6000c1a17dd7",
              "parentUUID": "701d8ada-1a4f-44a8-8662-fdcb403dc5cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// our div is hidden in our script.js\n// $('.connectors-div').hide()\ncy.get('.connectors-div').should('be.hidden');\n// https://on.cypress.io/invoke\n// call the jquery method 'show' on the 'div.container'\ncy.get('.connectors-div').invoke('show');\ncy.get('.connectors-div').should('be.visible');",
              "err": {},
              "uuid": "6c510ed3-3781-4823-a54c-742b8d0df896",
              "parentUUID": "701d8ada-1a4f-44a8-8662-fdcb403dc5cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spread\nconst arr = ['foo', 'bar', 'baz'];\ncy.wrap(arr).spread((foo, bar, baz) => {\n  expect(foo).to.eq('foo');\n  expect(bar).to.eq('bar');\n  expect(baz).to.eq('baz');\n});",
              "err": {},
              "uuid": "a7b62328-1db0-4f47-a087-9dc410566f8d",
              "parentUUID": "701d8ada-1a4f-44a8-8662-fdcb403dc5cf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "38aa7582-18e3-4239-aa39-f5fcac97ec59",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 164,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/then\ncy.get('.connectors-list > li').then($lis => {\n  expect($lis, '3 items').to.have.length(3);\n  expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n  expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n  expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n});",
                  "err": {},
                  "uuid": "f45cef84-4d53-4f6d-9a21-78b36c429c44",
                  "parentUUID": "38aa7582-18e3-4239-aa39-f5fcac97ec59",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 162,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  return 2;\n}).then(num => {\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "68fe321c-c876-45f3-aca0-9e08b1f674e7",
                  "parentUUID": "38aa7582-18e3-4239-aa39-f5fcac97ec59",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 254,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  // note that nothing is returned from this callback\n}).then(num => {\n  // this callback receives the original unchanged value 1\n  expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "e75a62fe-576f-4fa6-9f88-8bfc252cf474",
                  "parentUUID": "38aa7582-18e3-4239-aa39-f5fcac97ec59",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 155,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(num => {\n  expect(num).to.equal(1);\n  // note how we run a Cypress command\n  // the result yielded by this Cypress command\n  // will be passed to the second \".then\"\n  cy.wrap(2);\n}).then(num => {\n  // this callback receives the value yielded by \"cy.wrap(2)\"\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "4b11a330-7dee-4c32-b79c-a7bcd372e8b6",
                  "parentUUID": "38aa7582-18e3-4239-aa39-f5fcac97ec59",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f45cef84-4d53-4f6d-9a21-78b36c429c44",
                "68fe321c-c876-45f3-aca0-9e08b1f674e7",
                "e75a62fe-576f-4fa6-9f88-8bfc252cf474",
                "4b11a330-7dee-4c32-b79c-a7bcd372e8b6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 735,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "55ef3829-7f27-43bd-ae30-8458e20775ef",
            "9f6d1c85-9b60-4b02-94fb-6000c1a17dd7",
            "6c510ed3-3781-4823-a54c-742b8d0df896",
            "a7b62328-1db0-4f47-a087-9dc410566f8d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1125,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "eaed69f9-cba6-4c40-8d15-13b7ca7d09cd",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/cookies.cy.js",
      "file": "cypress/e2e/2-advanced-examples/cookies.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "956c8d4a-edb2-4a78-bcc1-43a4bcfae1b8",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 559,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click();\n// cy.getCookie() yields a cookie object\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "430d2c62-0d49-4275-9492-453274aa2c55",
              "parentUUID": "956c8d4a-edb2-4a78-bcc1-43a4bcfae1b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies for the current domain",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies for the current domain",
              "timedOut": null,
              "duration": 430,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncy.get('#getCookies .set-a-cookie').click();\n// cy.getCookies() yields an array of cookies\ncy.getCookies().should('have.length', 1).should(cookies => {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'token');\n  expect(cookies[0]).to.have.property('value', '123ABC');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "5a510f78-aaf8-4ae5-abd1-e6ce6bffcdd9",
              "parentUUID": "956c8d4a-edb2-4a78-bcc1-43a4bcfae1b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getAllCookies() - get all browser cookies",
              "fullTitle": "Cookies cy.getAllCookies() - get all browser cookies",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getallcookies\ncy.getAllCookies().should('be.empty');\ncy.setCookie('key', 'value');\ncy.setCookie('key', 'value', {\n  domain: '.example.com'\n});\n// cy.getAllCookies() yields an array of cookies\ncy.getAllCookies().should('have.length', 2).should(cookies => {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'key');\n  expect(cookies[0]).to.have.property('value', 'value');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n  expect(cookies[1]).to.have.property('name', 'key');\n  expect(cookies[1]).to.have.property('value', 'value');\n  expect(cookies[1]).to.have.property('httpOnly', false);\n  expect(cookies[1]).to.have.property('secure', false);\n  expect(cookies[1]).to.have.property('domain', '.example.com');\n  expect(cookies[1]).to.have.property('path');\n});",
              "err": {},
              "uuid": "3a304688-9ba8-4e62-b01f-373ad1c12e52",
              "parentUUID": "956c8d4a-edb2-4a78-bcc1-43a4bcfae1b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncy.setCookie('foo', 'bar');\n// cy.getCookie() yields a cookie object\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "dba79785-ad30-4098-8149-4da24e0df8a9",
              "parentUUID": "956c8d4a-edb2-4a78-bcc1-43a4bcfae1b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncy.get('#clearCookie .set-a-cookie').click();\ncy.getCookie('token').should('have.property', 'value', '123ABC');\n// cy.clearCookies() yields null\ncy.clearCookie('token');\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "ee75c35d-45a5-425b-907c-fb5818e00fdd",
              "parentUUID": "956c8d4a-edb2-4a78-bcc1-43a4bcfae1b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies for the current domain",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies for the current domain",
              "timedOut": null,
              "duration": 331,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncy.get('#clearCookies .set-a-cookie').click();\ncy.getCookies().should('have.length', 1);\n// cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "a8724b56-b842-41b8-a3e6-d5f378d44e14",
              "parentUUID": "956c8d4a-edb2-4a78-bcc1-43a4bcfae1b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearAllCookies() - clear all browser cookies",
              "fullTitle": "Cookies cy.clearAllCookies() - clear all browser cookies",
              "timedOut": null,
              "duration": 182,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearallcookies\ncy.getAllCookies().should('be.empty');\ncy.setCookie('key', 'value');\ncy.setCookie('key', 'value', {\n  domain: '.example.com'\n});\ncy.getAllCookies().should('have.length', 2);\n// cy.clearAllCookies() yields null\ncy.clearAllCookies();\ncy.getAllCookies().should('be.empty');",
              "err": {},
              "uuid": "6ee6db4f-84d1-4ad7-9972-9a14e57cf257",
              "parentUUID": "956c8d4a-edb2-4a78-bcc1-43a4bcfae1b8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "430d2c62-0d49-4275-9492-453274aa2c55",
            "5a510f78-aaf8-4ae5-abd1-e6ce6bffcdd9",
            "3a304688-9ba8-4e62-b01f-373ad1c12e52",
            "dba79785-ad30-4098-8149-4da24e0df8a9",
            "ee75c35d-45a5-425b-907c-fb5818e00fdd",
            "a8724b56-b842-41b8-a3e6-d5f378d44e14",
            "6ee6db4f-84d1-4ad7-9972-9a14e57cf257"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2136,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7ae62a8f-7ea0-47b2-8884-070ab2be71ac",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/cypress_api.cy.js",
      "file": "cypress/e2e/2-advanced-examples/cypress_api.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "19c96b27-6685-46e8-a660-27bbb4753596",
          "title": "Cypress APIs",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "387b363e-dc2a-4c37-8ada-fc9060b2b4f7",
              "title": "Cypress.Commands",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".add() - create a custom command",
                  "fullTitle": "Cypress APIs Cypress.Commands .add() - create a custom command",
                  "timedOut": null,
                  "duration": 570,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, (subject, method) => {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log';\n  // log the subject to the console\n  console[method]('The subject is', subject);\n  // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n});\ncy.get('button').console('info').then($button => {\n  // subject is still $button\n});",
                  "err": {},
                  "uuid": "c939ac62-2351-4821-a93c-2439dbb00695",
                  "parentUUID": "387b363e-dc2a-4c37-8ada-fc9060b2b4f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c939ac62-2351-4821-a93c-2439dbb00695"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 570,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "28d22738-4dad-4aa7-85c5-9ae7ee071dde",
              "title": "Cypress.Cookies",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".debug() - enable or disable debugging",
                  "fullTitle": "Cypress APIs Cypress.Cookies .debug() - enable or disable debugging",
                  "timedOut": null,
                  "duration": 241,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Cookies.debug(true);\n// Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
                  "err": {},
                  "uuid": "95b7ce9b-0a6e-48f6-a42b-2bded8d8aef4",
                  "parentUUID": "28d22738-4dad-4aa7-85c5-9ae7ee071dde",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "95b7ce9b-0a6e-48f6-a42b-2bded8d8aef4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 241,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "41ce10ea-c5d4-46d3-9612-d25f06c1f60f",
              "title": "Cypress.arch",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get CPU architecture name of underlying OS",
                  "fullTitle": "Cypress APIs Cypress.arch Get CPU architecture name of underlying OS",
                  "timedOut": null,
                  "duration": 141,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
                  "err": {},
                  "uuid": "4a8f14ff-718d-4251-8fa1-4342ea70ad93",
                  "parentUUID": "41ce10ea-c5d4-46d3-9612-d25f06c1f60f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4a8f14ff-718d-4251-8fa1-4342ea70ad93"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 141,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "725370c2-df5d-4bc5-8654-7295bad22b7c",
              "title": "Cypress.config()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get and set configuration options",
                  "fullTitle": "Cypress APIs Cypress.config() Get and set configuration options",
                  "timedOut": null,
                  "duration": 167,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/config\nlet myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000);\n// this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
                  "err": {},
                  "uuid": "8ec0db05-2ff2-4155-9494-cad04ca33199",
                  "parentUUID": "725370c2-df5d-4bc5-8654-7295bad22b7c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8ec0db05-2ff2-4155-9494-cad04ca33199"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 167,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5878c752-38e6-4eb8-a475-fb299fdb2545",
              "title": "Cypress.dom",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".isHidden() - determine if a DOM element is hidden",
                  "fullTitle": "Cypress APIs Cypress.dom .isHidden() - determine if a DOM element is hidden",
                  "timedOut": null,
                  "duration": 157,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nlet visibleP = Cypress.$('.dom-p p.visible').get(0);\n// our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be.true;\nexpect(Cypress.dom.isHidden(visibleP)).to.be.false;",
                  "err": {},
                  "uuid": "2332a90b-2252-4866-af6d-0ddab4f6c87b",
                  "parentUUID": "5878c752-38e6-4eb8-a475-fb299fdb2545",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2332a90b-2252-4866-af6d-0ddab4f6c87b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 157,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fedd7307-681f-41d3-ab82-8716a4e6dcb7",
              "title": "Cypress.env()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get environment variables",
                  "fullTitle": "Cypress APIs Cypress.env() Get environment variables",
                  "timedOut": null,
                  "duration": 146,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n});\n// get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local');\n// set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/');\n// get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
                  "err": {},
                  "uuid": "b80dbaa6-cc78-499f-acb8-6d5601f7f4d7",
                  "parentUUID": "fedd7307-681f-41d3-ab82-8716a4e6dcb7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b80dbaa6-cc78-499f-acb8-6d5601f7f4d7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 146,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3d7e8451-1a54-40af-b5ca-981ba8e6881a",
              "title": "Cypress.log",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Control what is printed to the Command Log",
                  "fullTitle": "Cypress APIs Cypress.log Control what is printed to the Command Log",
                  "timedOut": null,
                  "duration": 218,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/cypress-log",
                  "err": {},
                  "uuid": "d7c4d597-1e09-48be-9ec2-0f278e1b4cfa",
                  "parentUUID": "3d7e8451-1a54-40af-b5ca-981ba8e6881a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d7c4d597-1e09-48be-9ec2-0f278e1b4cfa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 218,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "63c8bca8-0e4c-4ee6-b885-9b4ce19103ab",
              "title": "Cypress.platform",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get underlying OS name",
                  "fullTitle": "Cypress APIs Cypress.platform Get underlying OS name",
                  "timedOut": null,
                  "duration": 138,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
                  "err": {},
                  "uuid": "407cf67d-888f-49e8-b540-94bc1791733c",
                  "parentUUID": "63c8bca8-0e4c-4ee6-b885-9b4ce19103ab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "407cf67d-888f-49e8-b540-94bc1791733c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 138,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "22c8566d-1b52-470b-87f7-bc29cfaadc42",
              "title": "Cypress.version",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get current version of Cypress being run",
                  "fullTitle": "Cypress APIs Cypress.version Get current version of Cypress being run",
                  "timedOut": null,
                  "duration": 157,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
                  "err": {},
                  "uuid": "3c34ae79-17d4-497a-850b-8e1c45408062",
                  "parentUUID": "22c8566d-1b52-470b-87f7-bc29cfaadc42",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3c34ae79-17d4-497a-850b-8e1c45408062"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 157,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "65e18b6c-75be-4257-97c9-a31a04fa6b53",
              "title": "Cypress.spec",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Get current spec information",
                  "fullTitle": "Cypress APIs Cypress.spec Get current spec information",
                  "timedOut": null,
                  "duration": 234,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
                  "err": {},
                  "uuid": "d86f033d-f931-40d4-b2b4-fe2dfac5003c",
                  "parentUUID": "65e18b6c-75be-4257-97c9-a31a04fa6b53",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d86f033d-f931-40d4-b2b4-fe2dfac5003c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 234,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b8a7825d-d779-4499-be58-223d68050681",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/files.cy.js",
      "file": "cypress/e2e/2-advanced-examples/files.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "599a1136-e336-41fb-82c9-fa6ba38e9832",
          "title": "Files",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 473,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\n// when application makes an Ajax request matching \"GET **/comments/*\"\n// Cypress will intercept it and reply with the object in `example.json` fixture\ncy.intercept('GET', '**/comments/*', {\n  fixture: 'example.json'\n}).as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('response.body').should('have.property', 'name').and('include', 'Using fixtures to represent data');",
              "err": {},
              "uuid": "f006e304-1e50-4952-b915-bfad06cdf068",
              "parentUUID": "599a1136-e336-41fb-82c9-fa6ba38e9832",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, 'fixture in the test context').to.deep.equal(requiredExample);\n// or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\ncy.wrap(this.example).should('deep.equal', requiredExample);",
              "err": {},
              "uuid": "1bf77722-53aa-4cae-8dd2-96c71cd42661",
              "parentUUID": "599a1136-e336-41fb-82c9-fa6ba38e9832",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile(Cypress.config('configFile')).then(config => {\n  expect(config).to.be.an('string');\n});",
              "err": {},
              "uuid": "e61d49d3-ea40-4d41-b964-c18b250acf31",
              "parentUUID": "599a1136-e336-41fb-82c9-fa6ba38e9832",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 340,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n  cy.writeFile('cypress/fixtures/users.json', response.body);\n});\ncy.fixture('users').should(users => {\n  expect(users[0].name).to.exist;\n});\n// JavaScript arrays and objects are stringified\n// and formatted into text.\ncy.writeFile('cypress/fixtures/profile.json', {\n  id: 8739,\n  name: 'Jane',\n  email: 'jane@example.com'\n});\ncy.fixture('profile').should(profile => {\n  expect(profile.name).to.eq('Jane');\n});",
              "err": {},
              "uuid": "266deee4-fd2e-4faa-aad7-96f3d51ab1ce",
              "parentUUID": "599a1136-e336-41fb-82c9-fa6ba38e9832",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f006e304-1e50-4952-b915-bfad06cdf068",
            "1bf77722-53aa-4cae-8dd2-96c71cd42661",
            "e61d49d3-ea40-4d41-b964-c18b250acf31",
            "266deee4-fd2e-4faa-aad7-96f3d51ab1ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1167,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b00bbb7d-fe6e-4a15-8527-4a6728cfb090",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/location.cy.js",
      "file": "cypress/e2e/2-advanced-examples/location.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0de49976-172c-4fa5-b162-31c289201721",
          "title": "Location",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 1201,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/hash\ncy.hash().should('be.empty');",
              "err": {},
              "uuid": "49d46255-9afb-43b8-bf88-54b07d8d38ae",
              "parentUUID": "0de49976-172c-4fa5-b162-31c289201721",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 255,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/location\ncy.location().should(location => {\n  expect(location.hash).to.be.empty;\n  expect(location.href).to.eq('https://example.cypress.io/commands/location');\n  expect(location.host).to.eq('example.cypress.io');\n  expect(location.hostname).to.eq('example.cypress.io');\n  expect(location.origin).to.eq('https://example.cypress.io');\n  expect(location.pathname).to.eq('/commands/location');\n  expect(location.port).to.eq('');\n  expect(location.protocol).to.eq('https:');\n  expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "da824b7c-b93d-4dfe-b4ce-46ba931678c5",
              "parentUUID": "0de49976-172c-4fa5-b162-31c289201721",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/url\ncy.url().should('eq', 'https://example.cypress.io/commands/location');",
              "err": {},
              "uuid": "c6109cfd-8aa7-4fc5-aeb3-8b2e827e440d",
              "parentUUID": "0de49976-172c-4fa5-b162-31c289201721",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "49d46255-9afb-43b8-bf88-54b07d8d38ae",
            "da824b7c-b93d-4dfe-b4ce-46ba931678c5",
            "c6109cfd-8aa7-4fc5-aeb3-8b2e827e440d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1611,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "75a3fcc1-a59f-4e32-a369-63a5d0865708",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/misc.cy.js",
      "file": "cypress/e2e/2-advanced-examples/misc.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "969c56cd-ee88-4bdd-91b0-b49b172d2d44",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 836,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(`Platform ${Cypress.platform} architecture ${Cypress.arch}`);\n// on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nconst isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\nif (isCircleOnWindows) {\n  cy.log('Skipping test on CircleCI');\n  return;\n}\n// cy.exec problem on Shippable CI\n// https://github.com/cypress-io/cypress/issues/6718\nconst isShippable = Cypress.platform === 'linux' && Cypress.env('shippable');\nif (isShippable) {\n  cy.log('Skipping test on ShippableCI');\n  return;\n}\ncy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane');\nif (Cypress.platform === 'win32') {\n  cy.exec(`print ${Cypress.config('configFile')}`).its('stderr').should('be.empty');\n} else {\n  cy.exec(`cat ${Cypress.config('configFile')}`).its('stderr').should('be.empty');\n  cy.exec('pwd').its('code').should('eq', 0);\n}",
              "err": {},
              "uuid": "6a54edb4-64e6-4ae0-a6c1-b285ffb934cf",
              "parentUUID": "969c56cd-ee88-4bdd-91b0-b49b172d2d44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 482,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncy.focused().should('have.id', 'name');\ncy.get('.misc-form').find('#description').click();\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "8401841e-d254-46d1-81d3-34abea85d000",
              "parentUUID": "969c56cd-ee88-4bdd-91b0-b49b172d2d44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({\n  foo: 'bar'\n}).should('have.property', 'foo').and('include', 'bar');",
              "err": {},
              "uuid": "f8fe23bd-f4b5-41f6-b86b-b390b317b72f",
              "parentUUID": "969c56cd-ee88-4bdd-91b0-b49b172d2d44",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "8abd7ace-82ca-4ce5-8d75-2dd070f7530f",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 3158,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "0724116b-992e-4a3d-a460-5635c9ea34a1",
                  "parentUUID": "8abd7ace-82ca-4ce5-8d75-2dd070f7530f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 154,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n  blackout: ['.foo'],\n  capture: 'viewport',\n  clip: {\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 200\n  },\n  scale: false,\n  disableTimersAndAnimations: true,\n  screenshotOnRunFailure: true,\n  onBeforeScreenshot() {},\n  onAfterScreenshot() {}\n});",
                  "err": {},
                  "uuid": "39506d42-0df7-4985-8f05-8f78c57c7c6a",
                  "parentUUID": "8abd7ace-82ca-4ce5-8d75-2dd070f7530f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0724116b-992e-4a3d-a460-5635c9ea34a1",
                "39506d42-0df7-4985-8f05-8f78c57c7c6a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3312,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "6a54edb4-64e6-4ae0-a6c1-b285ffb934cf",
            "8401841e-d254-46d1-81d3-34abea85d000",
            "f8fe23bd-f4b5-41f6-b86b-b390b317b72f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1460,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e6cb77f0-3460-499b-a4e6-d176e4625ea9",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/navigation.cy.js",
      "file": "cypress/e2e/2-advanced-examples/navigation.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1515af32-1747-4847-82b5-47f4516d5249",
          "title": "Navigation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 2117,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/go\ncy.location('pathname').should('include', 'navigation');\ncy.go('back');\ncy.location('pathname').should('not.include', 'navigation');\ncy.go('forward');\ncy.location('pathname').should('include', 'navigation');\n// clicking back\ncy.go(-1);\ncy.location('pathname').should('not.include', 'navigation');\n// clicking forward\ncy.go(1);\ncy.location('pathname').should('include', 'navigation');",
              "err": {},
              "uuid": "99be21f1-2b72-4d1c-b6a4-f67735d5054e",
              "parentUUID": "1515af32-1747-4847-82b5-47f4516d5249",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 687,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/reload\ncy.reload();\n// reload the page without using the cache\ncy.reload(true);",
              "err": {},
              "uuid": "08406284-1ae7-4df2-b0d1-562b97e68f56",
              "parentUUID": "1515af32-1747-4847-82b5-47f4516d5249",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 656,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit('https://example.cypress.io/commands/navigation', {\n  timeout: 50000,\n  // increase total time for the visit to resolve\n  onBeforeLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  },\n  onLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect(typeof contentWindow === 'object').to.be.true;\n  }\n});",
              "err": {},
              "uuid": "5a5e8b35-d63c-46ea-ba40-e423268f7455",
              "parentUUID": "1515af32-1747-4847-82b5-47f4516d5249",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "99be21f1-2b72-4d1c-b6a4-f67735d5054e",
            "08406284-1ae7-4df2-b0d1-562b97e68f56",
            "5a5e8b35-d63c-46ea-ba40-e423268f7455"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3460,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "96ee4e73-4b5d-4321-9fa8-22ca37d7942e",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/network_requests.cy.js",
      "file": "cypress/e2e/2-advanced-examples/network_requests.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3b87a2f6-f0db-40d2-be23-2c17daefa920",
          "title": "Network Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.request() - make an XHR request",
              "fullTitle": "Network Requests cy.request() - make an XHR request",
              "timedOut": null,
              "duration": 1559,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/request\ncy.request('https://jsonplaceholder.cypress.io/comments').should(response => {\n  expect(response.status).to.eq(200);\n  // the server sometimes gets an extra comment posted from another machine\n  // which gets returned as 1 extra object\n  expect(response.body).to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.have.property('headers');\n  expect(response).to.have.property('duration');\n});",
              "err": {},
              "uuid": "707fff0c-6975-470d-9fd5-3956c099e87f",
              "parentUUID": "3b87a2f6-f0db-40d2-be23-2c17daefa920",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - verify response using BDD syntax",
              "fullTitle": "Network Requests cy.request() - verify response using BDD syntax",
              "timedOut": null,
              "duration": 440,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.cypress.io/comments').then(response => {\n  // https://on.cypress.io/assertions\n  expect(response).property('status').to.equal(200);\n  expect(response).property('body').to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.include.keys('headers', 'duration');\n});",
              "err": {},
              "uuid": "b5757c3f-91ce-464f-bffe-085f53bd3856",
              "parentUUID": "3b87a2f6-f0db-40d2-be23-2c17daefa920",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() with query parameters",
              "fullTitle": "Network Requests cy.request() with query parameters",
              "timedOut": null,
              "duration": 390,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// will execute request\n// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\ncy.request({\n  url: 'https://jsonplaceholder.cypress.io/comments',\n  qs: {\n    postId: 1,\n    id: 3\n  }\n}).its('body').should('be.an', 'array').and('have.length', 1).its('0') // yields first element of the array\n.should('contain', {\n  postId: 1,\n  id: 3\n});",
              "err": {},
              "uuid": "933779d6-620f-4c58-bfea-40f5d1b246d3",
              "parentUUID": "3b87a2f6-f0db-40d2-be23-2c17daefa920",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - pass result to the second request",
              "fullTitle": "Network Requests cy.request() - pass result to the second request",
              "timedOut": null,
              "duration": 826,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first, let's find out the userId of the first user we have\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body') // yields the response object\n.its('0') // yields the first element of the returned list\n// the above two commands its('body').its('0')\n// can be written as its('body.0')\n// if you do not care about TypeScript checks\n.then(user => {\n  expect(user).property('id').to.be.a('number');\n  // make a new post on behalf of the user\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  });\n})\n// note that the value here is the returned value of the 2nd request\n// which is the new post object\n.then(response => {\n  expect(response).property('status').to.equal(201); // new entity created\n  expect(response).property('body').to.contain({\n    title: 'Cypress Test Runner'\n  });\n  // we don't know the exact post id - only that it will be > 100\n  // since JSONPlaceholder has built-in 100 posts\n  expect(response.body).property('id').to.be.a('number').and.to.be.gt(100);\n  // we don't know the user id here - since it was in above closure\n  // so in this test just confirm that the property is there\n  expect(response.body).property('userId').to.be.a('number');\n});",
              "err": {},
              "uuid": "9e2033ea-66db-4d13-bea9-161efee5c368",
              "parentUUID": "3b87a2f6-f0db-40d2-be23-2c17daefa920",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - save response in the shared test context",
              "fullTitle": "Network Requests cy.request() - save response in the shared test context",
              "timedOut": null,
              "duration": 638,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/variables-and-aliases\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body').its('0') // yields the first element of the returned list\n.as('user') // saves the object in the test context\n.then(function () {\n  // NOTE 👀\n  //  By the time this callback runs the \"as('user')\" command\n  //  has saved the user object in the test context.\n  //  To access the test context we need to use\n  //  the \"function () { ... }\" callback form,\n  //  otherwise \"this\" points at a wrong or undefined object!\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: this.user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  }).its('body').as('post'); // save the new post from the response\n}).then(function () {\n  // When this callback runs, both \"cy.request\" API commands have finished\n  // and the test context has \"user\" and \"post\" objects set.\n  // Let's verify them.\n  expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n});",
              "err": {},
              "uuid": "cb827d13-3b2b-4563-a970-16819ad27b63",
              "parentUUID": "3b87a2f6-f0db-40d2-be23-2c17daefa920",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.intercept() - route responses to matching requests",
              "fullTitle": "Network Requests cy.intercept() - route responses to matching requests",
              "timedOut": null,
              "duration": 795,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/intercept\nlet message = 'whoa, this comment does not exist';\n// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);\n// Listen to POST to comments\ncy.intercept('POST', '**/comments').as('postComment');\n// we have code that posts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-post').click();\ncy.wait('@postComment').should(({\n  request,\n  response\n}) => {\n  expect(request.body).to.include('email');\n  expect(request.headers).to.have.property('content-type');\n  expect(response && response.body).to.have.property('name', 'Using POST in cy.intercept()');\n});\n// Stub a response to PUT comments/ ****\ncy.intercept({\n  method: 'PUT',\n  url: '**/comments/*'\n}, {\n  statusCode: 404,\n  body: {\n    error: message\n  },\n  headers: {\n    'access-control-allow-origin': '*'\n  },\n  delayMs: 500\n}).as('putComment');\n// we have code that puts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-put').click();\ncy.wait('@putComment');\n// our 404 statusCode logic in scripts.js executed\ncy.get('.network-put-comment').should('contain', message);",
              "err": {},
              "uuid": "9b1fcf71-f2b1-40d0-90cf-ac59c88837f5",
              "parentUUID": "3b87a2f6-f0db-40d2-be23-2c17daefa920",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "707fff0c-6975-470d-9fd5-3956c099e87f",
            "b5757c3f-91ce-464f-bffe-085f53bd3856",
            "933779d6-620f-4c58-bfea-40f5d1b246d3",
            "9e2033ea-66db-4d13-bea9-161efee5c368",
            "cb827d13-3b2b-4563-a970-16819ad27b63",
            "9b1fcf71-f2b1-40d0-90cf-ac59c88837f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4648,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "43622b3f-a527-4fe6-ba0f-b630c14d943d",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/querying.cy.js",
      "file": "cypress/e2e/2-advanced-examples/querying.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bc7c1d2d-88b1-4f98-892d-4acf6461d3bc",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 1030,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get('#query-btn').should('contain', 'Button');\ncy.get('.query-btn').should('contain', 'Button');\ncy.get('#querying .well>button:first').should('contain', 'Button');\n//              ↲\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should('have.class', 'example');\n// 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]').invoke('attr', 'data-test-id').should('equal', 'test-example');\n// or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]').invoke('css', 'position').should('equal', 'static');\n// or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]').should('have.attr', 'data-test-id', 'test-example').and('have.css', 'position', 'static');",
              "err": {},
              "uuid": "f1953a82-1e87-47c4-a8c4-51ce29fb697d",
              "parentUUID": "bc7c1d2d-88b1-4f98-892d-4acf6461d3bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 228,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get('.query-list').contains('bananas').should('have.class', 'third');\n// we can pass a regexp to `.contains()`\ncy.get('.query-list').contains(/^b\\w+/).should('have.class', 'third');\ncy.get('.query-list').contains('apples').should('have.class', 'first');\n// passing a selector to contains will\n// yield the selector containing the text\ncy.get('#querying').contains('ul', 'oranges').should('have.class', 'query-list');\ncy.get('.query-button').contains('Save Form').should('have.class', 'btn');",
              "err": {},
              "uuid": "972918a2-5cd4-4d44-8a48-60f71f9c2cf7",
              "parentUUID": "bc7c1d2d-88b1-4f98-892d-4acf6461d3bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get('.query-form').within(() => {\n  cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n  cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n});",
              "err": {},
              "uuid": "4aba0332-7980-4f07-8738-66d06a2b28d3",
              "parentUUID": "bc7c1d2d-88b1-4f98-892d-4acf6461d3bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 274,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should('match', 'html');\ncy.get('.query-ul').within(() => {\n  // In this within, the root is now the ul DOM element\n  cy.root().should('have.class', 'query-ul');\n});",
              "err": {},
              "uuid": "767124ee-afb4-4263-bd86-d2195949d899",
              "parentUUID": "bc7c1d2d-88b1-4f98-892d-4acf6461d3bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 714,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get('[data-cy=best-practices-selecting-elements]').within(() => {\n  // Worst - too generic, no context\n  cy.get('button').click();\n  // Bad. Coupled to styling. Highly subject to change.\n  cy.get('.btn.btn-large').click();\n  // Average. Coupled to the `name` attribute which has HTML semantics.\n  cy.get('[name=submission]').click();\n  // Better. But still coupled to styling or JS event listeners.\n  cy.get('#main').click();\n  // Slightly better. Uses an ID but also ensures the element\n  // has an ARIA role attribute\n  cy.get('#main[role=button]').click();\n  // Much better. But still coupled to text content that may change.\n  cy.contains('Submit').click();\n  // Best. Insulated from all changes.\n  cy.get('[data-cy=submit]').click();\n});",
              "err": {},
              "uuid": "1636a505-28f9-444c-aa0f-39fcf7ec99ce",
              "parentUUID": "bc7c1d2d-88b1-4f98-892d-4acf6461d3bc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1953a82-1e87-47c4-a8c4-51ce29fb697d",
            "972918a2-5cd4-4d44-8a48-60f71f9c2cf7",
            "4aba0332-7980-4f07-8738-66d06a2b28d3",
            "767124ee-afb4-4263-bd86-d2195949d899",
            "1636a505-28f9-444c-aa0f-39fcf7ec99ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2422,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "514d7b10-071c-4b0d-a93f-a9903c45d98b",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/spies_stubs_clocks.cy.js",
      "file": "cypress/e2e/2-advanced-examples/spies_stubs_clocks.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "49733416-c10f-4a9d-ab35-6aa90abef404",
          "title": "Spies, Stubs, and Clock",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.spy() - wrap a method in a spy",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
              "timedOut": null,
              "duration": 693,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spy\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  foo() {}\n};\nconst spy = cy.spy(obj, 'foo').as('anyArgs');\nobj.foo();\nexpect(spy).to.be.called;",
              "err": {},
              "uuid": "629c6298-be29-4581-a61b-9be0930d604f",
              "parentUUID": "49733416-c10f-4a9d-ab35-6aa90abef404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.spy() retries until assertions pass",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
              "timedOut": null,
              "duration": 2529,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  /**\n   * Prints the argument passed\n   * @param x {any}\n  */\n  foo(x) {\n    console.log('obj.foo called with', x);\n  }\n};\ncy.spy(obj, 'foo').as('foo');\nsetTimeout(() => {\n  obj.foo('first');\n}, 500);\nsetTimeout(() => {\n  obj.foo('second');\n}, 2500);\ncy.get('@foo').should('have.been.calledTwice');",
              "err": {},
              "uuid": "a9e3b34c-e4c7-4af5-8700-5cd7010bb6aa",
              "parentUUID": "49733416-c10f-4a9d-ab35-6aa90abef404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() - create a stub and/or replace a function with stub",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/stub\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nconst obj = {\n  /**\n   * prints both arguments to the console\n   * @param a {string}\n   * @param b {string}\n  */\n  foo(a, b) {\n    console.log('a', a, 'b', b);\n  }\n};\nconst stub = cy.stub(obj, 'foo').as('foo');\nobj.foo('foo', 'bar');\nexpect(stub).to.be.called;",
              "err": {},
              "uuid": "90660d32-af46-4447-bb28-4c591b0681ee",
              "parentUUID": "49733416-c10f-4a9d-ab35-6aa90abef404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clock() - control time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
              "timedOut": null,
              "duration": 258,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clock\n// create the date in UTC so it's always the same\n// no matter what local timezone the browser is running in\nconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#clock-div').click();\ncy.get('#clock-div').should('have.text', '1489449600');",
              "err": {},
              "uuid": "2af8b277-3c0f-4c44-960f-00158110fdfb",
              "parentUUID": "49733416-c10f-4a9d-ab35-6aa90abef404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.tick() - move time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
              "timedOut": null,
              "duration": 393,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/tick\n// create the date in UTC so it's always the same\n// no matter what local timezone the browser is running in\nconst now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#tick-div').click();\ncy.get('#tick-div').should('have.text', '1489449600');\ncy.tick(10000); // 10 seconds passed\ncy.get('#tick-div').click();\ncy.get('#tick-div').should('have.text', '1489449610');",
              "err": {},
              "uuid": "cf894d07-04af-44f6-ae16-3f7714a7eeed",
              "parentUUID": "49733416-c10f-4a9d-ab35-6aa90abef404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() matches depending on arguments",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() matches depending on arguments",
              "timedOut": null,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nconst greeter = {\n  /**\n   * Greets a person\n   * @param {string} name\n  */\n  greet(name) {\n    return `Hello, ${name}!`;\n  }\n};\ncy.stub(greeter, 'greet').callThrough() // if you want non-matched calls to call the real method\n.withArgs(Cypress.sinon.match.string).returns('Hi').withArgs(Cypress.sinon.match.number).throws(new Error('Invalid name'));\nexpect(greeter.greet('World')).to.equal('Hi');\nexpect(() => greeter.greet(42)).to.throw('Invalid name');\nexpect(greeter.greet).to.have.been.calledTwice;\n// non-matched calls goes the actual method\nexpect(greeter.greet()).to.equal('Hello, undefined!');",
              "err": {},
              "uuid": "8eaf8acf-94b4-481c-9c9f-516feea277f7",
              "parentUUID": "49733416-c10f-4a9d-ab35-6aa90abef404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "matches call arguments using Sinon matchers",
              "fullTitle": "Spies, Stubs, and Clock matches call arguments using Sinon matchers",
              "timedOut": null,
              "duration": 34,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nconst calculator = {\n  /**\n   * returns the sum of two arguments\n   * @param a {number}\n   * @param b {number}\n  */\n  add(a, b) {\n    return a + b;\n  }\n};\nconst spy = cy.spy(calculator, 'add').as('add');\nexpect(calculator.add(2, 3)).to.equal(5);\n// if we want to assert the exact values used during the call\nexpect(spy).to.be.calledWith(2, 3);\n// let's confirm \"add\" method was called with two numbers\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match.number);\n// alternatively, provide the value to match\nexpect(spy).to.be.calledWith(Cypress.sinon.match(2), Cypress.sinon.match(3));\n// match any value\nexpect(spy).to.be.calledWith(Cypress.sinon.match.any, 3);\n// match any value from a list\nexpect(spy).to.be.calledWith(Cypress.sinon.match.in([1, 2, 3]), 3);\n/**\n * Returns true if the given number is even\n * @param {number} x\n */\nconst isEven = x => x % 2 === 0;\n// expect the value to pass a custom predicate function\n// the second argument to \"sinon.match(predicate, message)\" is\n// shown if the predicate does not pass and assertion fails\nexpect(spy).to.be.calledWith(Cypress.sinon.match(isEven, 'isEven'), 3);\n/**\n * Returns a function that checks if a given number is larger than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nconst isGreaterThan = limit => x => x > limit;\n/**\n * Returns a function that checks if a given number is less than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nconst isLessThan = limit => x => x < limit;\n// you can combine several matchers using \"and\", \"or\"\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(2), '> 2').and(Cypress.sinon.match(isLessThan(4), '< 4')));\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(200), '> 200').or(Cypress.sinon.match(3)));\n// matchers can be used from BDD assertions\ncy.get('@add').should('have.been.calledWith', Cypress.sinon.match.number, Cypress.sinon.match(3));\n// you can alias matchers for shorter test code\nconst {\n  match: M\n} = Cypress.sinon;\ncy.get('@add').should('have.been.calledWith', M.number, M(3));",
              "err": {},
              "uuid": "c5bec662-a233-43dc-a3b9-8e1a3bc96892",
              "parentUUID": "49733416-c10f-4a9d-ab35-6aa90abef404",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "629c6298-be29-4581-a61b-9be0930d604f",
            "a9e3b34c-e4c7-4af5-8700-5cd7010bb6aa",
            "90660d32-af46-4447-bb28-4c591b0681ee",
            "2af8b277-3c0f-4c44-960f-00158110fdfb",
            "cf894d07-04af-44f6-ae16-3f7714a7eeed",
            "8eaf8acf-94b4-481c-9c9f-516feea277f7",
            "c5bec662-a233-43dc-a3b9-8e1a3bc96892"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4090,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "33f17557-8859-4d49-aad0-b8445298ef9a",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/storage.cy.js",
      "file": "cypress/e2e/2-advanced-examples/storage.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f4590af4-ff9f-470b-86d0-d62d093885cc",
          "title": "Local Storage / Session Storage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.clearLocalStorage() - clear all data in localStorage for the current origin",
              "fullTitle": "Local Storage / Session Storage cy.clearLocalStorage() - clear all data in localStorage for the current origin",
              "timedOut": null,
              "duration": 1697,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearlocalstorage\ncy.get('.ls-btn').click();\ncy.get('.ls-btn').should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.clearLocalStorage();\ncy.getAllLocalStorage().should(() => {\n  expect(localStorage.getItem('prop1')).to.be.null;\n  expect(localStorage.getItem('prop2')).to.be.null;\n  expect(localStorage.getItem('prop3')).to.be.null;\n});\ncy.get('.ls-btn').click();\ncy.get('.ls-btn').should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\n// Clear key matching string in localStorage\ncy.clearLocalStorage('prop1');\ncy.getAllLocalStorage().should(() => {\n  expect(localStorage.getItem('prop1')).to.be.null;\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.get('.ls-btn').click();\ncy.get('.ls-btn').should(() => {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\n// Clear keys matching regex in localStorage\ncy.clearLocalStorage(/prop1|2/);\ncy.getAllLocalStorage().should(() => {\n  expect(localStorage.getItem('prop1')).to.be.null;\n  expect(localStorage.getItem('prop2')).to.be.null;\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});",
              "err": {},
              "uuid": "09be3d11-5b45-4e0e-85e0-31296f9aefa5",
              "parentUUID": "f4590af4-ff9f-470b-86d0-d62d093885cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getAllLocalStorage() - get all data in localStorage for all origins",
              "fullTitle": "Local Storage / Session Storage cy.getAllLocalStorage() - get all data in localStorage for all origins",
              "timedOut": null,
              "duration": 536,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getalllocalstorage\ncy.get('.ls-btn').click();\n// getAllLocalStorage() yields a map of origins to localStorage values\ncy.getAllLocalStorage().should(storageMap => {\n  expect(storageMap).to.deep.equal({\n    // other origins will also be present if localStorage is set on them\n    'https://example.cypress.io': {\n      'prop1': 'red',\n      'prop2': 'blue',\n      'prop3': 'magenta'\n    }\n  });\n});",
              "err": {},
              "uuid": "b125ef1f-93de-429f-8a30-f9ca31f1c030",
              "parentUUID": "f4590af4-ff9f-470b-86d0-d62d093885cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearAllLocalStorage() - clear all data in localStorage for all origins",
              "fullTitle": "Local Storage / Session Storage cy.clearAllLocalStorage() - clear all data in localStorage for all origins",
              "timedOut": null,
              "duration": 365,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearalllocalstorage\ncy.get('.ls-btn').click();\n// clearAllLocalStorage() yields null\ncy.clearAllLocalStorage();\ncy.getAllLocalStorage().should(() => {\n  expect(localStorage.getItem('prop1')).to.be.null;\n  expect(localStorage.getItem('prop2')).to.be.null;\n  expect(localStorage.getItem('prop3')).to.be.null;\n});",
              "err": {},
              "uuid": "f154391a-75ac-462f-9eb5-8e692ff844e8",
              "parentUUID": "f4590af4-ff9f-470b-86d0-d62d093885cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getAllSessionStorage() - get all data in sessionStorage for all origins",
              "fullTitle": "Local Storage / Session Storage cy.getAllSessionStorage() - get all data in sessionStorage for all origins",
              "timedOut": null,
              "duration": 378,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getallsessionstorage\ncy.get('.ls-btn').click();\n// getAllSessionStorage() yields a map of origins to sessionStorage values\ncy.getAllSessionStorage().should(storageMap => {\n  expect(storageMap).to.deep.equal({\n    // other origins will also be present if sessionStorage is set on them\n    'https://example.cypress.io': {\n      'prop4': 'cyan',\n      'prop5': 'yellow',\n      'prop6': 'black'\n    }\n  });\n});",
              "err": {},
              "uuid": "01ac44e7-8989-4a2d-8cad-9b272ce44b12",
              "parentUUID": "f4590af4-ff9f-470b-86d0-d62d093885cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearAllSessionStorage() - clear all data in sessionStorage for all origins",
              "fullTitle": "Local Storage / Session Storage cy.clearAllSessionStorage() - clear all data in sessionStorage for all origins",
              "timedOut": null,
              "duration": 368,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearallsessionstorage\ncy.get('.ls-btn').click();\n// clearAllSessionStorage() yields null\ncy.clearAllSessionStorage();\ncy.getAllSessionStorage().should(() => {\n  expect(sessionStorage.getItem('prop4')).to.be.null;\n  expect(sessionStorage.getItem('prop5')).to.be.null;\n  expect(sessionStorage.getItem('prop6')).to.be.null;\n});",
              "err": {},
              "uuid": "c631d1e2-7be8-4f40-833d-c7572b13ac94",
              "parentUUID": "f4590af4-ff9f-470b-86d0-d62d093885cc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "09be3d11-5b45-4e0e-85e0-31296f9aefa5",
            "b125ef1f-93de-429f-8a30-f9ca31f1c030",
            "f154391a-75ac-462f-9eb5-8e692ff844e8",
            "01ac44e7-8989-4a2d-8cad-9b272ce44b12",
            "c631d1e2-7be8-4f40-833d-c7572b13ac94"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3344,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cedc4ccd-3051-4e5f-b732-7f10cd28c13b",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/traversal.cy.js",
      "file": "cypress/e2e/2-advanced-examples/traversal.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
          "title": "Traversal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".children() - get child DOM elements",
              "fullTitle": "Traversal .children() - get child DOM elements",
              "timedOut": null,
              "duration": 1577,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/children\ncy.get('.traversal-breadcrumb').children('.active').should('contain', 'Data');",
              "err": {},
              "uuid": "d743be95-ab51-49c1-8b59-ac665db50ceb",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".closest() - get closest ancestor DOM element",
              "fullTitle": "Traversal .closest() - get closest ancestor DOM element",
              "timedOut": null,
              "duration": 242,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/closest\ncy.get('.traversal-badge').closest('ul').should('have.class', 'list-group');",
              "err": {},
              "uuid": "fdc9c556-5eaa-4a6e-bb48-5e298c446237",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".eq() - get a DOM element at a specific index",
              "fullTitle": "Traversal .eq() - get a DOM element at a specific index",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/eq\ncy.get('.traversal-list>li').eq(1).should('contain', 'siamese');",
              "err": {},
              "uuid": "761c2e6f-00b0-4a88-81e2-a3776dea7b5c",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".filter() - get DOM elements that match the selector",
              "fullTitle": "Traversal .filter() - get DOM elements that match the selector",
              "timedOut": null,
              "duration": 252,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/filter\ncy.get('.traversal-nav>li').filter('.active').should('contain', 'About');",
              "err": {},
              "uuid": "a875b132-8bdd-4f4e-9f8b-e57df965cb77",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".find() - get descendant DOM elements of the selector",
              "fullTitle": "Traversal .find() - get descendant DOM elements of the selector",
              "timedOut": null,
              "duration": 271,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/find\ncy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);",
              "err": {},
              "uuid": "f2fea861-f039-4e82-aec4-31bb73f4c81a",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".first() - get first DOM element",
              "fullTitle": "Traversal .first() - get first DOM element",
              "timedOut": null,
              "duration": 218,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/first\ncy.get('.traversal-table td').first().should('contain', '1');",
              "err": {},
              "uuid": "8526e86a-d2f0-47de-b33e-5fd93ff269eb",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".last() - get last DOM element",
              "fullTitle": "Traversal .last() - get last DOM element",
              "timedOut": null,
              "duration": 347,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/last\ncy.get('.traversal-buttons .btn').last().should('contain', 'Submit');",
              "err": {},
              "uuid": "b49f51ea-15f3-481a-a077-86ba4af4f150",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".next() - get next sibling DOM element",
              "fullTitle": "Traversal .next() - get next sibling DOM element",
              "timedOut": null,
              "duration": 218,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/next\ncy.get('.traversal-ul').contains('apples').next().should('contain', 'oranges');",
              "err": {},
              "uuid": "00a90e9d-acff-427a-a42f-36633bb4ae0a",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextAll() - get all next sibling DOM elements",
              "fullTitle": "Traversal .nextAll() - get all next sibling DOM elements",
              "timedOut": null,
              "duration": 301,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextall\ncy.get('.traversal-next-all').contains('oranges').nextAll().should('have.length', 3);",
              "err": {},
              "uuid": "1de5cde6-bda9-4c53-a74d-8a305a343cc8",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextUntil() - get next sibling DOM elements until next el",
              "fullTitle": "Traversal .nextUntil() - get next sibling DOM elements until next el",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextuntil\ncy.get('#veggies').nextUntil('#nuts').should('have.length', 3);",
              "err": {},
              "uuid": "9e4e2104-b597-4545-bb13-ac53a22fe192",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".not() - remove DOM elements from set of DOM elements",
              "fullTitle": "Traversal .not() - remove DOM elements from set of DOM elements",
              "timedOut": null,
              "duration": 282,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/not\ncy.get('.traversal-disabled .btn').not('[disabled]').should('not.contain', 'Disabled');",
              "err": {},
              "uuid": "1870c078-7512-49c1-b074-00cee8cad443",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parent() - get parent DOM element from DOM elements",
              "fullTitle": "Traversal .parent() - get parent DOM element from DOM elements",
              "timedOut": null,
              "duration": 226,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parent\ncy.get('.traversal-mark').parent().should('contain', 'Morbi leo risus');",
              "err": {},
              "uuid": "97f1baed-f83b-4fd8-9c6c-e384847d3690",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parents() - get parent DOM elements from DOM elements",
              "fullTitle": "Traversal .parents() - get parent DOM elements from DOM elements",
              "timedOut": null,
              "duration": 226,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parents\ncy.get('.traversal-cite').parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "d101d0a7-deab-4e53-92a1-f46993f28a14",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parentsUntil() - get parent DOM elements from DOM elements until el",
              "fullTitle": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parentsuntil\ncy.get('.clothes-nav').find('.active').parentsUntil('.clothes-nav').should('have.length', 2);",
              "err": {},
              "uuid": "cf3c610b-ea11-4852-860b-44423e63c85e",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prev() - get previous sibling DOM element",
              "fullTitle": "Traversal .prev() - get previous sibling DOM element",
              "timedOut": null,
              "duration": 248,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prev\ncy.get('.birds').find('.active').prev().should('contain', 'Lorikeets');",
              "err": {},
              "uuid": "48d28de2-6a29-49bf-9353-74b572707def",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevAll() - get all previous sibling DOM elements",
              "fullTitle": "Traversal .prevAll() - get all previous sibling DOM elements",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevall\ncy.get('.fruits-list').find('.third').prevAll().should('have.length', 2);",
              "err": {},
              "uuid": "57df011f-0208-4f0d-a766-8e4f57ba0dba",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevUntil() - get all previous sibling DOM elements until el",
              "fullTitle": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
              "timedOut": null,
              "duration": 277,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevuntil\ncy.get('.foods-list').find('#nuts').prevUntil('#veggies').should('have.length', 3);",
              "err": {},
              "uuid": "450fd7af-b4da-4c3b-942e-4cf992f5c3bf",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".siblings() - get all sibling DOM elements",
              "fullTitle": "Traversal .siblings() - get all sibling DOM elements",
              "timedOut": null,
              "duration": 221,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/siblings\ncy.get('.traversal-pills .active').siblings().should('have.length', 2);",
              "err": {},
              "uuid": "c38540a2-d45e-43ff-ab4d-5ed4eec659a4",
              "parentUUID": "27ffe0ee-bd7d-4461-a9fc-43bade3c8520",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d743be95-ab51-49c1-8b59-ac665db50ceb",
            "fdc9c556-5eaa-4a6e-bb48-5e298c446237",
            "761c2e6f-00b0-4a88-81e2-a3776dea7b5c",
            "a875b132-8bdd-4f4e-9f8b-e57df965cb77",
            "f2fea861-f039-4e82-aec4-31bb73f4c81a",
            "8526e86a-d2f0-47de-b33e-5fd93ff269eb",
            "b49f51ea-15f3-481a-a077-86ba4af4f150",
            "00a90e9d-acff-427a-a42f-36633bb4ae0a",
            "1de5cde6-bda9-4c53-a74d-8a305a343cc8",
            "9e4e2104-b597-4545-bb13-ac53a22fe192",
            "1870c078-7512-49c1-b074-00cee8cad443",
            "97f1baed-f83b-4fd8-9c6c-e384847d3690",
            "d101d0a7-deab-4e53-92a1-f46993f28a14",
            "cf3c610b-ea11-4852-860b-44423e63c85e",
            "48d28de2-6a29-49bf-9353-74b572707def",
            "57df011f-0208-4f0d-a766-8e4f57ba0dba",
            "450fd7af-b4da-4c3b-942e-4cf992f5c3bf",
            "c38540a2-d45e-43ff-ab4d-5ed4eec659a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5741,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e634d569-7fdd-4e98-88bf-ae76498c67d5",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/utilities.cy.js",
      "file": "cypress/e2e/2-advanced-examples/utilities.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a5f586ca-dfd1-4129-b192-8611a4c5b8ba",
          "title": "Utilities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cypress._ - call a lodash method",
              "fullTitle": "Utilities Cypress._ - call a lodash method",
              "timedOut": null,
              "duration": 1012,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/_\ncy.request('https://jsonplaceholder.cypress.io/users').then(response => {\n  let ids = Cypress._.chain(response.body).map('id').take(3).value();\n  expect(ids).to.deep.eq([1, 2, 3]);\n});",
              "err": {},
              "uuid": "c5a1dceb-d491-409e-bf38-6abb7b9deadf",
              "parentUUID": "a5f586ca-dfd1-4129-b192-8611a4c5b8ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.$ - call a jQuery method",
              "fullTitle": "Utilities Cypress.$ - call a jQuery method",
              "timedOut": null,
              "duration": 354,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/$\nlet $li = Cypress.$('.utility-jquery li:first');\ncy.wrap($li).should('not.have.class', 'active');\ncy.wrap($li).click();\ncy.wrap($li).should('have.class', 'active');",
              "err": {},
              "uuid": "a25e6cff-df1f-4b29-beec-6d1943436de6",
              "parentUUID": "a5f586ca-dfd1-4129-b192-8611a4c5b8ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Blob - blob utilities and base64 string conversion",
              "fullTitle": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
              "timedOut": null,
              "duration": 850,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blob\ncy.get('.utility-blob').then($div => {\n  // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n  // get the dataUrl string for the javascript-logo\n  return Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous').then(dataUrl => {\n    // create an <img> element and set its src to the dataUrl\n    let img = Cypress.$('<img />', {\n      src: dataUrl\n    });\n    // need to explicitly return cy here since we are initially returning\n    // the Cypress.Blob.imgSrcToDataURL promise to our test\n    // append the image\n    $div.append(img);\n    cy.get('.utility-blob img').click();\n    cy.get('.utility-blob img').should('have.attr', 'src', dataUrl);\n  });\n});",
              "err": {},
              "uuid": "958cb31a-7726-43e5-b7fb-45b378624263",
              "parentUUID": "a5f586ca-dfd1-4129-b192-8611a4c5b8ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.minimatch - test out glob patterns against strings",
              "fullTitle": "Utilities Cypress.minimatch - test out glob patterns against strings",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/minimatch\nlet matching = Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'matching wildcard').to.be.true;\nmatching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be.false;\n// ** matches against all downstream path segments\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be.true;\n// whereas * matches only the next path segment\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n  matchBase: false\n});\nexpect(matching, 'comments').to.be.false;",
              "err": {},
              "uuid": "bc045cf7-34bb-4883-8bf0-f8e878cff2ba",
              "parentUUID": "a5f586ca-dfd1-4129-b192-8611a4c5b8ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Promise - instantiate a bluebird promise",
              "fullTitle": "Utilities Cypress.Promise - instantiate a bluebird promise",
              "timedOut": null,
              "duration": 1150,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/promise\nlet waited = false;\n/**\n * @return Bluebird<string>\n */\nfunction waitOneSecond() {\n  // return a promise that resolves after 1 second\n  return new Cypress.Promise((resolve, reject) => {\n    setTimeout(() => {\n      // set waited to true\n      waited = true;\n      // resolve with 'foo' string\n      resolve('foo');\n    }, 1000);\n  });\n}\ncy.then(() => {\n  // return a promise to cy.then() that\n  // is awaited until it resolves\n  return waitOneSecond().then(str => {\n    expect(str).to.eq('foo');\n    expect(waited).to.be.true;\n  });\n});",
              "err": {},
              "uuid": "40a5a514-8cb0-40de-958a-f576273e28ef",
              "parentUUID": "a5f586ca-dfd1-4129-b192-8611a4c5b8ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5a1dceb-d491-409e-bf38-6abb7b9deadf",
            "a25e6cff-df1f-4b29-beec-6d1943436de6",
            "958cb31a-7726-43e5-b7fb-45b378624263",
            "bc045cf7-34bb-4883-8bf0-f8e878cff2ba",
            "40a5a514-8cb0-40de-958a-f576273e28ef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3522,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "81c04e24-ace9-49c8-a78e-b4711574d30b",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/viewport.cy.js",
      "file": "cypress/e2e/2-advanced-examples/viewport.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e5c38011-f763-471a-a274-5c466d430177",
          "title": "Viewport",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.viewport() - set the viewport size and dimension",
              "fullTitle": "Viewport cy.viewport() - set the viewport size and dimension",
              "timedOut": null,
              "duration": 3377,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/viewport\ncy.get('#navbar').should('be.visible');\ncy.viewport(320, 480);\n// the navbar should have collapse since our screen is smaller\ncy.get('#navbar').should('not.be.visible');\ncy.get('.navbar-toggle').should('be.visible').click();\ncy.get('.nav').find('a').should('be.visible');\n// lets see what our app looks like on a super large screen\ncy.viewport(2999, 2999);\n// cy.viewport() accepts a set of preset sizes\n// to easily set the screen to a device's width and height\n// We added a cy.wait() between each viewport change so you can see\n// the change otherwise it is a little too fast to see :)\ncy.viewport('macbook-15');\ncy.wait(200);\ncy.viewport('macbook-13');\ncy.wait(200);\ncy.viewport('macbook-11');\ncy.wait(200);\ncy.viewport('ipad-2');\ncy.wait(200);\ncy.viewport('ipad-mini');\ncy.wait(200);\ncy.viewport('iphone-6+');\ncy.wait(200);\ncy.viewport('iphone-6');\ncy.wait(200);\ncy.viewport('iphone-5');\ncy.wait(200);\ncy.viewport('iphone-4');\ncy.wait(200);\ncy.viewport('iphone-3');\ncy.wait(200);\n// cy.viewport() accepts an orientation for all presets\n// the default orientation is 'portrait'\ncy.viewport('ipad-2', 'portrait');\ncy.wait(200);\ncy.viewport('iphone-4', 'landscape');\ncy.wait(200);\n// The viewport will be reset back to the default dimensions\n// in between tests (the  default can be set in cypress.config.{js|ts})",
              "err": {},
              "uuid": "c2ed8b7d-19e8-495d-8bf2-87bc4eda498a",
              "parentUUID": "e5c38011-f763-471a-a274-5c466d430177",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2ed8b7d-19e8-495d-8bf2-87bc4eda498a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3377,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ed82b2a3-76cd-484b-8ab4-c3ead0ceabea",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/waiting.cy.js",
      "file": "cypress/e2e/2-advanced-examples/waiting.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d107e8ba-0779-4a2d-baf9-6c46bf54f4dc",
          "title": "Waiting",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 4927,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wait-input1').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input2').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input3').type('Wait 1000ms after typing');\ncy.wait(1000);",
              "err": {},
              "uuid": "a04e2a85-cf9a-4455-b870-b545b6f77eba",
              "parentUUID": "d107e8ba-0779-4a2d-baf9-6c46bf54f4dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 461,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment');\n// we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click();\n// wait for GET comments/1\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);",
              "err": {},
              "uuid": "82e34ecc-a0c0-42b9-ad87-d82adb718165",
              "parentUUID": "d107e8ba-0779-4a2d-baf9-6c46bf54f4dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a04e2a85-cf9a-4455-b870-b545b6f77eba",
            "82e34ecc-a0c0-42b9-ad87-d82adb718165"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5388,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "982e7115-9e32-4c34-a8a3-703a86f97faf",
      "title": "",
      "fullFile": "cypress/e2e/2-advanced-examples/window.cy.js",
      "file": "cypress/e2e/2-advanced-examples/window.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a209eb1a-38db-499a-b307-60a04ea47499",
          "title": "Window",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.window() - get the global window object",
              "fullTitle": "Window cy.window() - get the global window object",
              "timedOut": null,
              "duration": 740,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/window\ncy.window().should('have.property', 'top');",
              "err": {},
              "uuid": "a8986952-6e2c-4c12-9521-9f62c777da14",
              "parentUUID": "a209eb1a-38db-499a-b307-60a04ea47499",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.document() - get the document object",
              "fullTitle": "Window cy.document() - get the document object",
              "timedOut": null,
              "duration": 215,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/document\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');",
              "err": {},
              "uuid": "a5272a13-a470-467d-ac5b-d90fc347f9a5",
              "parentUUID": "a209eb1a-38db-499a-b307-60a04ea47499",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.title() - get the title",
              "fullTitle": "Window cy.title() - get the title",
              "timedOut": null,
              "duration": 132,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/title\ncy.title().should('include', 'Kitchen Sink');",
              "err": {},
              "uuid": "5da9914e-8e13-474e-a87f-5e3dea0ab442",
              "parentUUID": "a209eb1a-38db-499a-b307-60a04ea47499",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8986952-6e2c-4c12-9521-9f62c777da14",
            "a5272a13-a470-467d-ac5b-d90fc347f9a5",
            "5da9914e-8e13-474e-a87f-5e3dea0ab442"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1087,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}