{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-06-04T00:41:32.341Z",
    "end": "2025-06-04T00:41:47.048Z",
    "duration": 14707,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "29fd5384-213b-4e20-af29-452b70c6edef",
      "title": "",
      "fullFile": "cypress/e2e/Login_spec.cy.js",
      "file": "cypress/e2e/Login_spec.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cbdfefe2-e326-4ef9-af59-e454a22325a6",
          "title": "Test Case 2: Login User with correct email and password",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should login if user exists, or register first if not",
              "fullTitle": "Test Case 2: Login User with correct email and password should login if user exists, or register first if not",
              "timedOut": null,
              "duration": 13009,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "homePage.visit();\nhomePage.verifyHomePageVisible();\nhomePage.getSignupLoginButton().click();\ncy.contains('New User Signup!').should('be.visible');\n// Try to create user to check existence\ncy.get('[data-qa=\"signup-name\"]').type(this.userInf.name);\ncy.get('[data-qa=\"signup-email\"]').type(this.userInf.email);\ncy.get('[data-qa=\"signup-button\"]').click();\ncy.get('body').then($body => {\n  if ($body.text().includes('Email Address already exist!')) {\n    cy.log('Email exists. Proceeding with login...');\n    // Go back to Login section\n    loginPage.enterLoginEmail(this.userInf.email);\n    loginPage.enterLoginPassword(this.userInf.password);\n    loginPage.clickLoginButton();\n    //accountPage.verifyLoggedIn(this.userInf.username);\n    accountPage.clickDeleteAccount();\n    accountPage.verifyAccountDeleted();\n  } else {\n    // Email did not exist, so registration happened\n    signupPage.verifyAccountInfoVisible();\n    signupPage.fillAccountInfo(this.userInf); // Your reusable fill form function\n    signupPage.clickCreateAccount();\n    accountPage.verifyAccountCreated();\n    accountPage.clickContinue();\n    // accountPage.verifyLoggedIn(this.userInf.username);\n    accountPage.clickDeleteAccount();\n    accountPage.verifyAccountDeleted();\n  }\n});",
              "err": {},
              "uuid": "85821c84-4532-4567-90f5-9be6fba2cee8",
              "parentUUID": "cbdfefe2-e326-4ef9-af59-e454a22325a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "85821c84-4532-4567-90f5-9be6fba2cee8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13009,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}